//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConexionDB.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaDBEntities1 : DbContext
    {
        public PruebaDBEntities1()
            : base("name=PruebaDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Parametros> Parametros { get; set; }
    
        public virtual int usp_InsertarParametro(string strNombre, string strValor, string strTipo)
        {
            var strNombreParameter = strNombre != null ?
                new ObjectParameter("strNombre", strNombre) :
                new ObjectParameter("strNombre", typeof(string));
    
            var strValorParameter = strValor != null ?
                new ObjectParameter("strValor", strValor) :
                new ObjectParameter("strValor", typeof(string));
    
            var strTipoParameter = strTipo != null ?
                new ObjectParameter("strTipo", strTipo) :
                new ObjectParameter("strTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarParametro", strNombreParameter, strValorParameter, strTipoParameter);
        }
    
        public virtual int usp_ActualizarParametro(string nombre, string valor, string tipo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarParametro", nombreParameter, valorParameter, tipoParameter);
        }
    
        public virtual ObjectResult<usp_Obtenerparametros_Result> usp_Obtenerparametros(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Obtenerparametros_Result>("usp_Obtenerparametros", nombreParameter);
        }
    }
}
